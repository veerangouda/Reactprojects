{"version":3,"sources":["components/Weather/Weathercard.js","components/Weather/Temp.js","App.js","index.js"],"names":["Weathercard","temp","humidity","pressure","weathermood","name","speed","country","sunset","useState","weatherState","setweatherState","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setsearchValue","tempInfo","settempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9db9de42.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Weathercard = ({  \r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset, \r\n}) => {\r\n    const [weatherState, setweatherState] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch (weathermood) {\r\n                case \"clouds\":\r\n                    setweatherState(\"wi-day-cloudy\")\r\n                    break;\r\n                case \"Haze\":\r\n                    setweatherState(\"wi-fog\")\r\n                    break;\r\n                case \"Clear\":\r\n                    setweatherState(\"wi-day-sunny\")\r\n                    break;\r\n                case \"Mist\":\r\n                    setweatherState(\"wi-dust\")\r\n                    break;\r\n\r\n                default:\r\n                    setweatherState(\"wi-day-sunny\")\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }, [weathermood])\r\n\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`\r\n\r\n    return (\r\n        <div>\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${weatherState}`} ></i>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">{weathermood}</div>\r\n                        <div className=\"place\">{name}, {country}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-sunset\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">{timeStr} <br />Sunset</p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-humidity\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">{humidity} <br />Humidity</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-rain\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">{pressure} <br />Pressure</p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-strong-wind\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">{speed} <br />Speed</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weathercard;\r\n","// api.openweathermap.org/data/2.5/weather?q=hubli&appid=6885c2f046b0ce31c44dbdb3da74e14c\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport Weathercard from './Weathercard'\r\nimport \"./style.css\"\r\n\r\nconst Temp = () => {\r\n    const [searchValue, setsearchValue] = useState(\"\")\r\n    const [tempInfo, settempInfo] = useState({})\r\n    const getWeatherInfo = async ()=>{\r\n        try{\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=\r\n            ${searchValue}&units=metric&appid=6885c2f046b0ce31c44dbdb3da74e14c`\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n\r\n            const {temp, humidity, pressure} = data.main;\r\n            const {main: weathermood} = data.weather[0];\r\n            const {name}  = data;\r\n            const {speed} = data.wind;\r\n            const {country, sunset} = data.sys;\r\n\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,    \r\n            };\r\n\r\n            settempInfo(myNewWeatherInfo)\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       getWeatherInfo()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input type=\"search\"\r\n                        placeholder=\"Search...\"\r\n                        autoFocus\r\n                        id=\"search\"\r\n                        className=\"searchTerm\" \r\n                        value ={searchValue}\r\n                        onChange = {(e)=>setsearchValue(e.target.value )} />\r\n                    <button className=\"searchButton\" type=\"button\" onClick = {getWeatherInfo} >Search</button>\r\n                </div>\r\n            </div>\r\n            {/* temp card */}\r\n\r\n          < Weathercard {...tempInfo} />\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Temp\r\n","// import react, { useReducer } from \"react\";\n// import Restaurent from \"./components/basics/Restaurent\";\nimport UseState from \"./components/Hooks/useState\";\nimport Temp from \"./components/Weather/Temp\";\n// import UseEffect from \"./components/Hooks/useEffect\"\n// import UseReducer from \"./components/Hooks/useReducer\"\n// import Todo from \"./components/ToDoreact/Todo\"\n// import Temp from  \"./components/Weather/Temp\"\n\n\nfunction App() {\n  return (\n    <>\n      {/* < UseState /> */}\n      <Temp/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}